# Introduction

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>
<?rfc compact="yes"?>
<?rfc comments="yes"?>

[](#RFC1034) and [](#RFC4592) describe wildcard domain name.

Nowadays wildcard domain is globally used, especially on CDN, P2P, advertise, anti-virus, DNSBLs service.

Take "*.github.io" for example, 

    foo.github.io.		3599	IN	CNAME	github.map.fastly.net.
    github.map.fastly.net.	25	IN	A	151.101.0.133
    github.map.fastly.net.	25	IN	A	151.101.192.133
    github.map.fastly.net.	25	IN	A	151.101.64.133
    github.map.fastly.net.	25	IN	A	151.101.128.133

Wildcard domain is simple configured on Authoritative Nameserver, but Intermediate Nameservers have to cache various domains (xxx.github.io, yyy.github.io, ... ) of the same wildcard domain configuration.

Moreover, [](#DNSNoise) found that many of wildcard domains are disposable (short live time), but with low cache hit rate, increase cache size.

This document specifies a new SWILD RR type and describes a wildcard detect method for Intermediate Nameservers to cache wildcard domain record, in order to reduce the cache size and optimize the wildcard domain cache miss.

It is OPT-IN, Intermediate Nameservers can choose not to implement or enable it.
   
# Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in [](#RFC2119).

Basic terms used in this specification are defined in the documents [](#RFC1034), [](#RFC1035), [](#RFC4592), [](#RFC7719), [](#RFC7871) and [](#RFC8020).

Authoritative Nameserver: Described in [](#RFC1035) Section 6.

Intermediate Nameserver: Described in [](#RFC7871) Section 4.   

Recursive Resolver: Described in [](#RFC1035) Section 7. 

Forwarding Resolver: Described in [](#RFC2308) Section 1.  

# The SWILD Resource Record

The presentation format of the SWILD RR is as follows:

       owner ttl class ALIAS target

The "target" is a subdomain of the owner, to indicate that all subdomains of the "owner" have the same configuration with the "target".

# Overview 

We use a special character "_" to indicate the wildcard domain configuration on Intermediate Nameservers, make all the subdomains CNAME to the "_" subdomain, and generate a SWILD RR "_".

If most of Recursive Resolvers support SWILD RR in the future, the wildcard detect method can be deprecated on the Recursive Resolvers, "_" special character is not stricted use for SWILD subdomain name.

Take  "*.foo.com" for example.

## Authoritative Nameserver

Authoritative Nameserver configures the zonefile of "foo.com": 

1) add SWILD RR "_" to indicate subdomain wildcard.

2) add TXT RR "subdomain_wildcard: _" to indicate subdomain wildcard.

3) make "*.foo.com" CNAME to "_.foo.com". 

4) configure "_.foo.com".

Note that, there is not any other subdomain configured in the "foo.com" zone except "_.foo.com".

    $ORIGIN  foo.com.

    @    86400  IN   SWILD  _
    @    86400  IN   TXT    "subdomain_wildcard: _"
    _     3600  IN   CNAME  map.bar.net.
    *      600  IN   CNAME  _

## Intermediate Nameserver: Recursive Resolver

### Get Subdomain Wildcard Response

Recursive Resolver sends "xxx.foo.com" A RR query to Authoritative Nameserver, get dns response: "xxx.foo.com" CNAME to "_.foo.com".

    xxx.foo.com.	600	IN	CNAME	_.foo.com.
    _.foo.com.	   3600	IN	CNAME	map.bar.net.
    map.bar.net.	600	IN	A	    202.38.64.10
    foo.com.      86400 IN  SWILD   _.foo.com.

### Recursive Resolvers that support SWILD RR

Recursive Resolver knows that SWILD RR is for wildcard domain on recursive side, marks "_.foo.com" as wildcard domains of "*.foo.com".  The next time, Recursive Resolver receives a "yyy.foo.com" A RR query, it can directly return a wildcard CNAME as response.

    yyy.foo.com.	600	IN	CNAME	_.foo.com.
    _.foo.com.	   3600	IN	CNAME	map.bar.net.
    map.bar.net.	600	IN	A	    202.38.64.10
    foo.com.      86400 IN  SWILD   _.foo.com.

### Recursive Resolvers that not support SWILD RR, but support wildcard detect method

Recursive Resolver knows that "_" is special character for wildcard domain on recursive side, and sends a "foo.com" TXT RR query to Authoritative Nameserver, get dns response: foo.com subdomain is wildcard.

    foo.com.		86400	IN	TXT	"subdomain_wildcard: _"

Recursive Resolver marks "_.foo.com" as wildcard domains of "*.foo.com".  The next time, Recursive Resolver receives a "yyy.foo.com" A RR query, it can directly return a wildcard CNAME as response.

    yyy.foo.com.	600	IN	CNAME	_.foo.com.
    _.foo.com.	   3600	IN	CNAME	map.bar.net.
    map.bar.net.	600	IN	A	    202.38.64.10

### Recursive Resolvers that not support neither SWILD RR nor wildcard detect method

Recursive Resolver can deal dns response as usual.

The next time, Recursive Resolver receives a "yyy.foo.com" A RR query, it can send dns query to Authoritative Nameserver.

## Intermediate Nameserver: Forwarding Resolvers

Forwarding Resolver sends query to its next-hop Resolver is similar to Recursive Resolver sends query to Authoritative Nameserver.

# DNS Cache

Intermediate Nameservers' cache size can be reduced, avoid to cache various domains of the same wildcard domain configuration. 

Intermediate Nameservers' cache hit rate can be rised, avoid to query Authoritative Nameserver for the same wildcard domain configuration.

# DNSSEC

Clients can use DNSSEC to validate the response with the Authoritative Nameserver.

DNSSEC-Enabled Intermediate Nameservers that support wildcard detect method can save cost, only validating the SWILD/TXT RRSIG of "foo.com" and the RRSIGs of "_.foo.com".

# Acknowledgements

Thanks a lot to all in the DNSOP, DNSPRIV and DNSEXT mailing list.
